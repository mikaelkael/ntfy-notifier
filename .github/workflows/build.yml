name: Build

on:
  push: ~
  pull_request: ~

jobs:
  phpstan:
    runs-on: ubuntu-20.04
    name: PHPStan
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: PHPStan
        uses: docker://oskarstark/phpstan-ga
        env:
          REQUIRE_DEV: true
        with:
          args: analyse
  cs-fixer:
    runs-on: ubuntu-20.04
    name: PHP-CS-Fixer
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Fix CS
        uses: docker://oskarstark/php-cs-fixer-ga
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - '7.4'
          - '8.1'
          - '8.2'
        symfony: ['5.4.*']
        include:
          - description: 'Symfony 5.4'
            php: '7.4'
            symfony: 5.4.*
          - description: 'Symfony 6.1'
            php: '8.1'
            symfony: 6.1.*
          - description: 'Symfony 6.2'
            php: '8.2'
            symfony: 6.2.*
          - description: 'Symfony 6.3'
            php: '8.2'
            symfony: 6.3.*-dev
    name: PHP ${{ matrix.php }} tests (Symfony ${{ matrix.symfony }})
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: ${{ matrix.php }}-${{ matrix.symfony }}-${{ matrix.composer_option }}
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Composer
        run: |
          sed -ri 's/"symfony\/(.+)": "(.+)"/"symfony\/\1": "'${{ matrix.symfony }}'"/' composer.json;
        if: contains(matrix.symfony, '-dev')
      - run: composer config minimum-stability dev
      - run: composer config prefer-stable true
        if: matrix.symfony
      - run: composer update --no-interaction --no-progress --ansi ${{ matrix.composer_option }}
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit
